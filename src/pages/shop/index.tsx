import { NextPage } from 'next'
import Head from 'next/head'
import { useContext, useEffect } from 'react'
import { useQuery } from 'react-query'
import MainBody from 'UwU/components/Main'
import { CallApiGet } from 'UwU/components/Main/main.service'
import ShopBody from 'UwU/components/Shop/shop'
import { typedUseSelector } from 'UwU/store'
import { setCagories } from 'UwU/store/shop.slice'
import { ProductType } from 'UwU/types/products.types'

const Shop: NextPage<{ prods: ProductType[],categories:string[] }> = ({ prods,categories }) => {
  const categoriesS = typedUseSelector(s => s.shopSlice)
  useEffect(()=>{
    setCagories([{name:'asdfasdf',selected:true}])
  },[])
  useEffect(()=>{
      console.log(categoriesS)
  },[categoriesS])
  const { data } = useQuery<ProductType[], any>(
    'products',
    () =>
      CallApiGet<ProductType[]>('https://fakestoreapi.com/products'),
    { initialData: prods },
  )

  return (
    <>
      <Head>
        <title>Shop</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ShopBody products={data!} />
    </>
  )
}

export default Shop

export async function getStaticProps() {
  let res =await Promise.all([
    CallApiGet<ProductType[]>(
      'https://fakestoreapi.com/products',
    ),
    CallApiGet<ProductType[]>(
      'https://fakestoreapi.com/products/categories',
    )
  ])

  return { props: { prods:res[0] ,categories:res[1]} }
}
